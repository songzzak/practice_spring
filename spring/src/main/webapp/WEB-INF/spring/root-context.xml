<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

		<!-- DB연결하는 객체 bean으로 등록하기 -->
		<!-- 
				1. DatabSource클래스 -> DB에 접속하는 정보를 제공해주는 bean -> BasicDataSource클래스
				2. SqlSessionFactory클래스 -> SqlSession을 생성해주는 클래스 -> SqlSessionFactoryBean클래스
				3. SqlSession클래스 -> 사용하는 클래스(SQL문 실행, Connection관리) -> SqlSeesionTemplate클래스
		 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close" >
			<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
			<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
			<property name="username" value="spring"/>
			<property name="password" value="spring"/>
		</bean>
		
		<bean id="proxyDataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
			<constructor-arg index="0" ref="dataSource"/>
			<property name="logFormatter">
				<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
					<property name="loggingType" value="MULTI_LINE"/>
					<property name="sqlPrefix" value="[SQL]"></property>
				</bean>
			</property>
		</bean>
		
		<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="proxyDataSource"/>
			<property name="configLocation" value="classpath:mybatis-config.xml"/>
			<property name="mapperLocations" value="classpath:mappers/**/*.xml"/>
		</bean>
		
		<bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
			<constructor-arg index="0" ref="sessionFactory"/>
		</bean>
		
		<!-- 트렌젝션 설정하기 -->
		<!-- DataSourceTransactionManager클래스를 bean으로 등록
			1. 어노테이션 방식으로 설정하기
			<tx:annotation-driven>태그 설정
		 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="proxyDataSource"/>
		</bean>
		<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->
		
		<!-- 
			2. XML방식으로 설정하기
		-->
		<tx:advice id="txadvice" transaction-manager="transactionManager">
			<tx:attributes >
				<tx:method name="insert*" />
			</tx:attributes>
		</tx:advice>
		<aop:config>
			<aop:pointcut expression="within(com.bs.spring..*ServiceImpl)" id="transop"/>
			<aop:advisor advice-ref="txadvice" pointcut-ref="transop"/>
		</aop:config>
		
		
		
		
		
		
</beans>